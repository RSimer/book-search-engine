[{"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\index.js":"1","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\App.js":"2","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\API.js":"8","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\auth.js":"9","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\mutations.js":"11"},{"size":278,"mtime":1632687342363,"results":"12","hashOfConfig":"13"},{"size":781,"mtime":1633798142985,"results":"14","hashOfConfig":"13"},{"size":3047,"mtime":1633636468340,"results":"15","hashOfConfig":"13"},{"size":4810,"mtime":1633636667224,"results":"16","hashOfConfig":"13"},{"size":2601,"mtime":1632687342362,"results":"17","hashOfConfig":"13"},{"size":3430,"mtime":1633750335697,"results":"18","hashOfConfig":"13"},{"size":2766,"mtime":1633750235566,"results":"19","hashOfConfig":"13"},{"size":1449,"mtime":1632687342364,"results":"20","hashOfConfig":"13"},{"size":1283,"mtime":1632687342364,"results":"21","hashOfConfig":"13"},{"size":823,"mtime":1632687342364,"results":"22","hashOfConfig":"13"},{"size":1115,"mtime":1633655733396,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"sjiqfv",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\index.js",[],["49","50"],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\App.js",["51","52"],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\pages\\SavedBooks.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\pages\\SearchBooks.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\Navbar.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\SignupForm.js",["53"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport {  ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await ADD_USER(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\components\\LoginForm.js",["54"],"// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await LOGIN_USER(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\API.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\auth.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\robbi\\OneDrive\\Documents\\GitHub\\book-search-engine\\client\\src\\utils\\mutations.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":22,"nodeType":"61","messageId":"62","endLine":3,"endColumn":34},{"ruleId":"59","severity":1,"message":"63","line":8,"column":7,"nodeType":"61","messageId":"62","endLine":8,"endColumn":13},{"ruleId":"59","severity":1,"message":"64","line":4,"column":9,"nodeType":"61","messageId":"62","endLine":4,"endColumn":20},{"ruleId":"59","severity":1,"message":"64","line":5,"column":9,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'ApolloServer' is defined but never used.","Identifier","unusedVar","'client' is assigned a value but never used.","'useMutation' is defined but never used.","no-global-assign","no-unsafe-negation"]